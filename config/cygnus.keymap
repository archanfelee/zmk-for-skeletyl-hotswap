/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define DVRK    1
#define NUM     2
#define SYM     3
#define MSE     4
#define QWE     5

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

// mod-tap settings
&mt {
   flavor = "tap-preferred";
   tapping_term_ms = <200>;
};

/
#define MOVE_VERT(vert) ((vert)&0xFFFF)
#define MOVE_VERT_DECODE(encoded) (int16_t)((encoded)&0x0000FFFF)
#define MOVE_HOR(hor) (((hor)&0xFFFF) << 16)
#define MOVE_HOR_DECODE(encoded) (int16_t)(((encoded)&0xFFFF0000) >> 16)

#define MOVE(hor, vert) (MOVE_HOR(hor) + MOVE_VERT(vert))

#define MMV_U MOVE_VERT(-1200)
#define MMV_D MOVE_VERT(1200)
#define MMV_L MOVE_HOR(-1200)
#define MMV_R MOVE_HOR(1200)


/ {

	combos {
        compatible = "zmk,combos";

                combo_zoomin {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp TAB>;
        };
 
        combo_pgdn {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp PG_DN>;
        };

        combo_pgup {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp PG_UP>;
        };
    };
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };
        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "hold-preferred";
            bindings =
                <&mo>,
                <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };
    };

    keymap {
        compatible = "zmk,keymap";

default_layer {
            label = "Marx";
			bindings = <
        &kp Q     &kp W      &kp E      &kp R      &kp T         &kp Y    &kp U      &kp I      &kp O      &kp P
        &mt LWIN A &mt LALT B &mt LSFT V &mt LCTL F &kp G         &kp H    &mt RCTL N &mt RSFT M &mt RALT L &mt RWIN C 
        &kp Z     &kp X      &kp K      &kp D  &kp S         &kp K    &kp J  &kp COMMA &kp DOT &kp S
                &lt SYM ESC  &lt NUM SPACE       &tog SYM                   &tog DVRK  &lt QWE BSPC  &lt MSE RET
            >;
        };

		    	dvorak_layer {
            label = "DVRK";
			bindings = <
        &kp SINGLE_QUOTE     &kp COMMA   &kp DOT   &kp P   &kp Y         &kp F    &kp G     &kp C      &kp R      &kp L
        &mt LWIN A &mt LALT O &mt LSFT E &mt LCTL U &kp I         &kp D    &mt RCTL H &mt RSFT T &mt RALT N &mt RWIN S 
 	&kp SEMI    &kp Q      &kp J      &kp K  &kp X         &kp B    &kp M  &kp W &kp V &kp Z
           &lt SYM ESC  &lt NUM SPACE          &trans          &trans   &lt QWE BSPC  &lt MSE RET
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
                &kp UP  &kp LEFT  &kp DOWN   &kp RIGHT   &kp F4      &kp MINUS    &kp SEMI  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SLASH
                &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                &kp N6   &mt RCTL N7  &mt RSFT N8  &mt RALT N9  &mt RWIN N0
                &kp EXCLAMATION  &kp QUESTION  &kp LESS_THAN   &kp GREATER_THAN   &kp GRAVE     &kp UNDERSCORE   &kp COLON  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp SINGLE_QUOTE
        &trans          &trans          &trans          &trans  &kp BSPC   &kp K_MENU
            >;
        };	

        symbol_layer {
            label = "SYM";
            bindings = <
                &kp C_VOL_UP    &kp LEFT       &kp C_PLAY_PAUSE         &kp RIGHT   &kp C_BRIGHTNESS_INC      &kp BACKSLASH  &kp C_VOICE_COMMAND  &kp HOME  &kp PAGE_UP  &kp TILDE
                &kp C_POWER   &kp C_PREVIOUS &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_MUTE                &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR
                &kp C_VOL_DN   &kp AT         &kp RET          &kp BSPC    &kp C_BRIGHTNESS_DEC       &kp PLUS  &kp SEMICOLON   &kp END  &kp PAGE_DOWN  &kp TILDE2  
        &lt MSE SPACE  &kp ESC   &trans          &trans  &kp C_PLAY_PAUSE  &kp ESC
            >;
        };
        mouse_layer {
            label = "MSE";
            bindings = <
                &mkp RCLK  &none   &mmv MOVE_UP   &none   &none            &kp C_BRIGHTNESS_INC  &kp PAGE_UP   &none  &kp PAGE_DOWN    &kp C_POWER
                 &mkp LCLK  &mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_RIGHT  &bt BT_CLR                  &kp C_BRIGHTNESS_DEC  &none  &none   &none  &kp K_POWER
                &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &kp C_BACKLIGHT_TOGGLE  &kp K_APP      &none       &kp K_LOCK       &kp C_SLEEP_MODE
        &trans          &trans          &trans          &trans  &trans  &trans
            >;
        };

	cangjie_layer {
            label = "QWE";
			bindings = <
            		&kp A     &kp W      &kp E      &kp R      &kp T         &kp Y    &kp U      &kp I      &kp O      &kp A
             		&mt LWIN Q &mt LALT S &mt LSFT D &mt LCTL F &kp G         &kp H    &mt RCTL J &mt RSFT K &mt RALT L &mt RWIN P 
                &kp Z     &kp X      &kp C      &kp V  &kp B         &kp N    &kp M  &kp Y &kp N &kp B
        &trans          &trans          &trans          &trans  &trans  &trans
            >;
        };

    };
};
